name: Integration-test

on:
  push

jobs:
  it:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: '17'
        java-package: jdk

    - name: Build auth provider
      id: auth-provider
      run: docker build -f ./src/ishare-auth-provider/Dockerfile ./src/ishare-auth-provider -t ishare-auth-provider

    - name: Build resource updater
      id: resource-updater
      run: docker build -f ./src/envoy-resource-updater/Dockerfile ./src/envoy-resource-updater -t envoy-resource-updater

    - name: Build envoy
      id: envoy
      run: docker build -f ./envoy/Dockerfile ./envoy -t envoy

    - name: Build config service
      id: config-service
      run: |
        cd src/endpoint-configuration-service/
        mvn clean install jib:dockerBuild -DskipTests

    - name: Build ip-tables container
      id: ip-tables
      run: |
        cd docker-compose/
        sudo ./iptables.sh

    - name: Run compose
      id: compose
      env:
        ENVOY_IMAGE: envoy
        RESOURCE_UPDATER_IMAGE: envoy-resource-updater
        CONFIG_SERVICE_IMAGE: wi_stefan/endpoint-configuration-service
        AUTH_PROVIDER_IMAGE: ishare-auth-provider
      run: |
        cd docker-compose/
        docker-compose up -d

    - name: Extract Branch Name
      run: echo "BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV

    - name: Run tests
      id: test
      if: env.BRANCH == 'main'
      run: |
        cd integration-test/integration-test/
        mvn clean install -Dcucumber.publish-token=${{ secrets.CUCUMBER_PUBLISH_TOKEN }}

    - name: Run tests
      id: test-dev
      if: env.BRANCH != 'main'
      run: |
        cd integration-test/integration-test/
        mvn clean install -Dcucumber.publish-token=${{ secrets.CUCUMBER_PUBLISH_TOKEN_DEV }}