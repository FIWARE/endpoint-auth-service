openapi: 3.0.3
info:
  description: 'This spec provides the credentials management api for the iShare auth-provider.'
  version: 0.0.1
  title: iShare Credentials Management API
  contact:
    email: stefan.wiedemann@fiware.org
tags:
  - name: CredentialsManagement
    description: "Endpoints for managing the credentials."
servers:
  - url: http://localhost:8080
    description: "Local test server address."

paths:
  '/credentials':
    get:
      tags:
        - CredentialsManagement
      description: "Get all clientIds that have credentials configured."
      operationId: getCredentialsList
      responses:
        '200':
          description: "List of clientIds."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  '/credentials/{clientId}':
    post:
      tags:
        - CredentialsManagement
      parameters:
        - $ref: '#/components/parameters/clientId'
      description: "Create a new endpoint configuration."
      operationId: postCredentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IShareCredentials'
      responses:
        '201':
          description: "Created."
        '400':
          description: "Received an invalid credentials definition."
        '409':
          description: "Client already exists."
    delete:
      tags:
        - CredentialsManagement
      parameters:
        - $ref: '#/components/parameters/clientId'
      description: "Delete the client-credentials for the given id."
      operationId: deleteCredentials
      responses:
        '204':
          description: "The client was successfully removed."
        '404':
          description: "No such client exists."
          
  '/credentials/{clientId}/certificateChain':
    put:
      tags:
        - CredentialsManagement
      parameters:
        - $ref: '#/components/parameters/clientId'
      description: "Update the certificate chain for a given client."
      operationId: putCertificateChain
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        '204':
          description: "The certificate chain was successfully updated."
        '404':
          description: "No such client exists."
          
  '/credentials/{clientId}/signingKey':
    put:
      tags:
        - CredentialsManagement
      parameters:
        - $ref: '#/components/parameters/clientId'
      description: "Update the certificate chain for a given client."
      operationId: putSigningKey
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        '204':
          description: "The signing key was successfully updated."
        '404':
          description: "No such client exists."      

components:
  parameters:
    clientId:
      name: clientId
      description: "Id of the client."
      in: path
      required: true
      schema:
        type: string
   
  schemas:
    IShareCredentials:
      description: "Credentials to be used for the iShare client."
      properties:
        certificateChain:
          description: "Certificate chain to be used in the x5c-header. Needs to be in pkcs12-cer format."
          type: string
        signingKey:
          description: "Signing key to be used for the iShare JWT. Needs to be in pk8 format."
          type: string
      required:
        - certificateChain
        - signingKey
